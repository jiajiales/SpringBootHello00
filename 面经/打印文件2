### Java设计模式
总体来说设计模式分为三大类：

 

**创建型模式，共五种：**工厂方法模式、抽象工厂模式、单例模式、建造者模式、原型模式。

 

**结构型模式，共七种：**适配器模式、装饰器模式、代理模式、外观模式、桥接模式、组合模式、享元模式。

 

**行为型模式，共十一种：** 策略模式、模板方法模式、观察者模式、迭代子模式、责任链模式、命令模式、备忘录模式、状态模式、访问者模式、中介者模式、解释器模式。

**1.请列举出在JDK中几个常用的设计模式？**

单例模式用于Runtime, Calendar和其他的一些类中。工厂模式被用于各种不可变的类如Boolean，像Boolean.valueOf方法。观察者模式被用于swing和很多的时间监听中。装饰器模式被用于多个java IO类。

**2.什么是设计模式？你是否在你的代码里面使用过任何设计模式？**

 设计模式是世界上各种各样程序员用来解决特定设计问题的尝试和测试的方法。设计模式是代码可用性的延伸。

**3.Java 中什么叫单例设计模式？请用Java 写出线程安全的单例模式**

**4.解释下什么是观察者模式？**

 观察者模式是基于对象的状态变化和观察者的通讯，以便他们作出相应的操作。简单的例子就是一个天气系统，当天气变化时必须在展示给公众的视图中进行反映。这个视图对象是一个主体，而不同的视图是观察者。

**5.使用工厂模式最主要的好处是什么？在哪里使用？**

工厂模式的最大好处是增加了创建对象时的封装层次。

如果你使用工厂来创建对象，之后你可以使用更高级和更高性能的实现来替换原始的产品实现或类，这不需要在调用层做任何修改。

**6.举一个用Java 实现的装饰模式(decorator design pattern)？它是作用于对象层次还是类层次？**

装饰模式增加强了单个对象的能力。Java IO 到处都使用了装饰模式，典型例子就是Buffered 系列类如BufferedReader和BufferedWriter，它们增强了Reader和Writer对象，以实现提升性能的 Buffer 层次的读取和写入。

**7.设计一个ATM 机，请说出你的设计思路。**

比如设计金融系统来说，必须知道它们应该在任何情况下都能够正常工作。不管是断电还是其他情况，ATM 应该保持正确的状态（事务） , 想想加锁（locking）、事务（transaction

）、错误条件（error condition）、边界条件（boundary condition）等等。尽管你不能想到具体的设计，但如果你可以指出非功能性需求，提出一些问题，想到关于边界条件，这些都会是很好的。

**8.在Java 中，什么时候用重载，什么时候用重写？**

如果你看到一个类的不同实现有着不同的方式来做同一件事，那么就应该用重写（overriding），而重载（overloading）是用不同的输入做同一件事。在Java 中，重载的方法签名不同，而重写并不是。

**9.举例说明什么情况下会更倾向于使用抽象类而不是接口？**

接口和抽象类都遵循”面向接口而不是实现编码”设计原则，它可以增加代码的灵活性，可以适应不断变化的需求。下面有几个点可以帮助你回答这个问题：

在 Java 中，你只能继承一个类，但可以实现多个接口。所以一旦你继承了一个类，你就失去了继承其他类的机会了。接口通常被用来表示附属描述或行为如：Runnable、Clonable、Serializable等等，因此当你使用抽象类来表示行为时，你的类就不能同时是Runnable和Clonable(注：这里的意思是指如果把Runnable等实现为抽象类的情况)，因为在Java 中你不能继承两个类，但当你使用接口时，你的类就可以同时拥有多个不同的行为。在一些对时间要求比较高的应用中，倾向于使用抽象类，它会比接口稍快一点。如果希望把一系列行为都规范在类继承层次内，并且可以更好地在同一个地方进行编码，那么抽象类是一个更好的选择。有时，接口和抽象类可以一起使用，接口中定义函数，而在抽象类中定义默认的实现。

**10.什么是 MVC 设计模式？举一个 MVC 设计模式的例子。**

11. 什么是责任链模式？

12 什么是适配器模式？举用 Java 实现适配器模式的例子。
